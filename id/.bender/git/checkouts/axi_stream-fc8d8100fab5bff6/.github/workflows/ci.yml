# Copyright 2022 ETH Zurich and University of Bologna.
# Solderpad Hardware License, Version 0.51, see LICENSE for details.
# SPDX-License-Identifier: SHL-0.51

# Author: Michael Rogenmoser <michaero@iis.ee.ethz.ch>

name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  BENDER: ./bender0.26.1

jobs:
  lint-license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Python Requirements
        run: python3 -m pip install -r requirements.txt
      - name: Lint license
        run: scripts/check-license
  lint-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'push' }}
      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Python Requirements
        run: python3 -m pip install -r requirements.txt
      - name: Lint commits
        run: python3 util/lint-commits.py HEAD
  lint-verilog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chipsalliance/verible-linter-action@main
        with:
          paths: |
            ./src
          extra_args: "--rules=-interface-name-style --lint_fatal --parse_fatal --waiver_files util/waiver.verible"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reviewdog_reporter: github-check
  analyze-contributors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Python Requirements
        run: python3 -m pip install -r requirements.txt
      - name: List contributors
        run: scripts/list-contributors | tee contributions.txt
      - name: Upload contributions.txt
        uses: actions/upload-artifact@v2
        with:
          name: contributions
          path: contributions.txt
          retention-days: 7
  analyze-todos:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Python Requirements
        run: python3 -m pip install -r requirements.txt
      - name: List todos
        run: scripts/list-todos | tee open_todos.txt
      - name: Upload todos.txt
        uses: actions/upload-artifact@v2
        with:
          name: open_todos
          path: open_todos.txt
          retention-days: 7

  docs:
    runs-on: ubuntu-22.04
    needs: [lint-license, lint-commit, lint-verilog]
    env:
      MORTY: ./morty
    steps:
      - uses: actions/checkout@v3
      - name: Install Bender
        run: |
          curl --proto '=https' --tlsv1.2 -sLO https://github.com/pulp-platform/bender/releases/download/v0.26.1/bender-0.26.1-x86_64-linux-gnu-ubuntu22.04.tar.gz
          tar -xvf bender-0.26.1-x86_64-linux-gnu-ubuntu22.04.tar.gz bender
          rm -f bender-0.26.1-x86_64-linux-gnu-ubuntu22.04.tar.gz
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Python Requirements
        run: python3 -m pip install -r requirements.txt
      - name: Install Morty
        run: |
          curl --proto '=https' --tlsv1.2 -sLO https://github.com/pulp-platform/morty/releases/download/v0.8.0/morty-ubuntu.22.04-x86_64.tar.gz
          tar -xvf morty-ubuntu.22.04-x86_64.tar.gz morty
          rm -f morty-ubuntu.22.04-x86_64.tar.gz
      - name: Create sources_repo.json
        run: ./bender sources -n -f -t rtl -t test -t synthesis > sources_repo.json
      - name: Build Doc
        run: |
          mkdir -p doc
          ./morty -f sources_repo.json --doc doc
      - name: Pickle
        run: |
          mkdir -p pickle
          ./morty -f sources_repo.json -o pickle/axi_stream_pickle.sv
      - name: Graph
        run: |
          mkdir -p doc
          ./morty -f sources_repo.json --graph_file doc/axi_stream.dot > /dev/null
          dot doc/axi_stream.dot -Tpng -Granksep=4 -v -Ln25 -o doc/axi_stream.png
          rm -f doc/axi_stream.dot
      - name: Upload doc
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: doc
          retention-days: 7
      - name: Upload pickle
        uses: actions/upload-artifact@v2
        with:
          name: pickle
          path: pickle
          retention-days: 7
      - name: Create publish docs
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-pages-artifact@main
        with:
          path: doc

  deploy-pages:
    needs: docs
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.output.page_url }}
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v1
